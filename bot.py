#!/usr/bin/python
import telebot
from telebot import types
import logging
from conf import *
from datetime import datetime
import time
import requests
import random
import re

logger = telebot.logger
telebot.logger.setLevel(logging.DEBUG)
logging.basicConfig(filename = "logfile.log",
                    filemode = "w",
                    level = logging.DEBUG)
logger = logging.getLogger()

print(f"\nLaunched Bot..\n")

bot = telebot.TeleBot(TOKEN)

f = open('var_1.txt', 'r', encoding='UTF-8')
var_1 = f.read().split('\n')
f.close()

@bot.message_handler(commands=['start'])
def start(message):
	markup = types.ReplyKeyboardMarkup(row_width=2)
	btn1 = types.KeyboardButton('–£–∑–Ω–∞—Ç—å –ì–æ—à—É –ª—É—á—à–µ')
	btn2 = types.KeyboardButton('–ó–∞–≥–∞–¥–∫–∏ –æ—Ç –ì–æ—à–∏')
	btn3 = types.KeyboardButton('–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É —É –ì–æ—à–∏')
	btn4 = types.KeyboardButton('–ó–∞–±–∞—à–ª—è—Ç—å –ì–æ—à–µ')
	btn5 = types.KeyboardButton('admin_panel')
	markup.add(btn1, btn2, btn3, btn4)
	weekday = weekday_str(message)
	if weekday == "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫":
		weekday = "–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ üòë"
	if weekday == "–í—Ç–æ—Ä–Ω–∏–∫":
		weekday = "–≤—Ç–æ—Ä–Ω–∏–∫ ü§î"
	if weekday == "–°—Ä–µ–¥–∞":
		weekday = "—Å—Ä–µ–¥–∞ ü§´"
	if weekday == "–ß–µ—Ç–≤–µ—Ä–≥":
		weekday = "—á–µ—Ç–≤–µ—Ä–≥ üò¨"
	if weekday == "–ü—è—Ç–Ω–∏—Ü–∞":
		weekday = "–ø—è—Ç–Ω–∏—Ü–∞ ü§§"
	if weekday == "–°—É–±–±–æ—Ç–∞":
		weekday = "—Å—É–±–±–æ—Ç–∞ üòÜ"
	if weekday == "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ":
		weekday = "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ üò£"
	bot.send_message(message.chat.id, f"<b>–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}! –°–µ–≥–æ–¥–Ω—è {weekday}</b>\n–Ø –±—É–¥—É —Ç–µ–±—è —Ä–∞–∑–≤–ª–µ–∫–∞—Ç—å, –∫–æ–≥–¥–∞ —Ç–µ–±–µ –æ–¥–∏–Ω–æ–∫–æüòè", parse_mode='html', reply_markup=markup)
	if message.from_user.first_name == admin_name:
		markup.add(btn5)
		bot.send_message(message.chat.id, f"Login is Allowed in the Admin Panel",  reply_markup=markup)
		
def admin_panel(message):
	if message.from_user.first_name != admin_name:
		start(message)
	else:
		markup_admin = types.ReplyKeyboardMarkup(row_width=1)
		btn_admin = types.KeyboardButton('admin_panel')
		btn_log = types.KeyboardButton('read_logs')
		btn_clear_log = types.KeyboardButton('clear_logs')
		btn_back = types.KeyboardButton('back_to_user')
		markup_admin.add(btn_admin, btn_log, btn_clear_log, btn_back)
		bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ö–æ–∑—è–∏–Ω {message.from_user.first_name}!",  reply_markup=markup_admin)

def read_logs(message):
	f = open('log.txt', 'r', encoding='UTF-8')
	read_file = f.read()
	bot.send_message(message.chat.id, f"{read_file}")
	f.close()

def clear_logs(message):
	f = open('log.txt', 'w', encoding='UTF-8')
	f.write("")
	bot.send_message(message.chat.id, f"–û—Ç—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
	f.close()

def get_logs(message):
	current_dt = datetime.now().strftime("%d.%m.%y %H:%M:%S")
	c_date, c_time = current_dt.split()
	f = open('log.txt', 'a', encoding='UTF-8')
	f.write(f'{c_date} {c_time} - user: {message.from_user.first_name} @{message.from_user.username} - text: {message.text}.\n')
	f.close()

def weather(message):
	city = "Sochi"
	code_to_smile = {
        "Clear": "\U00002600",# –Ø—Å–Ω–æ
        "Clouds": "\U00002601",# –û–±–ª–∞—á–Ω–æ
        "Rain": "\U00002614",# –î–æ–∂–¥—å
        "Drizzle": "\U00002614",# –î–æ–∂–¥—å
        "Thunderstorm": "\U000026A1",# –ì—Ä–æ–∑–∞
        "Snow": "\U0001F328",# –°–Ω–µ–≥
        "Mist": "\U0001F32B"# –¢—É–º–∞–Ω
    }
	try:
		get = requests.get(f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={open_weather_token}&units=metric&lang=ru")
		result_get = get.json()
		get_city = result_get['name']
		temp = str(result_get['main']['temp'])
		temp_max = str(result_get['main']['temp_max'])
		temp_min = str(result_get['main']['temp_min'])
		weather = str(result_get['weather'][0]['description'].capitalize())
		weather_description = result_get['weather'][0]['main']
		if weather_description in code_to_smile:
			weather_icon = code_to_smile[weather_description]
		else:
			weather_icon = ""
		# –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç –ì–æ—à–∏
		weather_status = "–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤..."
		if weather_description == "Clear":
			weather_status = "–ë–µ–∑ –æ—á–∫–æ–≤ –Ω–µ –≤–∞—Ä–∏–∞–Ω—Ç –≤—ã—Ö–æ–¥–∏—Ç—å"
		if weather_description == "Clouds":
			weather_status = "–ü–æ–≥–æ–¥–∞ –±–æ–º–±–∞, –≥–∞–∑—É–π –≥—É–ª—è—Ç—å"
		if weather_description == "Rain":
			weather_status = "–î–æ–º–∞ —Å–∏–¥–∏ –∏ –∫–∞–π—Ñ—É–π"
		if weather_description == "Drizzle":
			weather_status = "–î–æ–º–∞ —Å–∏–¥–∏ –∏ –∫–∞–π—Ñ—É–π"
		if weather_description == "Thunderstorm":
			weather_status = "–ë–æ–ª—å–Ω–∞—è –ø–æ–≥–æ–¥–∞! –î–∞–∂–µ –≤ –æ–∫–Ω–æ –Ω–µ —Å–º–æ—Ç—Ä–∏!"
		if weather_description == "Snow":
			weather_status = "–ü–æ—Ä–∞ –Ω–∞–≤–µ—Å—Ç–∏ –±–µ–ª—É—é —Å—É–µ—Ç—É"
		if weather_description == "Mist":
			weather_status = "–ß–∏—Å—Ç–æ –Ω–∞ –∫—É–º–∞—Ä–µ. –ë–∞–ª–¥–µ–∂..."
		sunrise = datetime.fromtimestamp(result_get['sys']['sunrise']).strftime("%H:%M")
		sunset = datetime.fromtimestamp(result_get['sys']['sunset']).strftime("%H:%M")
		bot.send_message(message.chat.id, f"üåÖüåÖüåÖ–ü–æ–≥–æ–¥–∞ –≤ {get_city}üåÖüåÖüåÖ\n\n{weather} {weather_icon}\n\nüå°\n–°–µ–π—á–∞—Å: {temp[:2]}¬∞\n–ú–∏–Ω–∏–º—É–º: {temp_min[:2]}¬∞\n–ú–∞–∫—Å–∏–º—É–º: {temp_max[:2]}¬∞\n\n‚òÄÔ∏è\n–í–æ—Å—Ö–æ–¥: {sunrise}\n–ó–∞–∫–∞—Ç: {sunset}\n\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç –ì–æ—à–∏: {weather_status}")
	except:
		bot.send_message(message.chat.id, f"–°—Ç—Ä–∞–Ω–Ω–æ.. –≠—Ç–æ–≥–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã–ª–æ —Å–ª—É—á–∏—Ç—å—Å—è")
		pass

def weekday_str(message):
	weekday = datetime.now().weekday()
	if weekday == 0:
		return "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫"
	if weekday == 1:
		return "–í—Ç–æ—Ä–Ω–∏–∫"
	if weekday == 2:
		return "–°—Ä–µ–¥–∞"
	if weekday == 3:
		return "–ß–µ—Ç–≤–µ—Ä–≥"
	if weekday == 4:
		return "–ü—è—Ç–Ω–∏—Ü–∞"
	if weekday == 5:
		return "–°—É–±–±–æ—Ç–∞"
	if weekday == 6:
		return "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"

def payments(message):
	bot.send_message(message.chat.id, "–ö–∞–∫ –ø—Ä–∏—è—Ç–Ω–æ, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å)\n\n–¶–µ–ª—É—é —Ç–≤–æ–∏ —Ä—É–∫–∏üòô")

@bot.message_handler(content_types=["text"])
def handle_text(message):
	banned = ["–¥—É—Ä–∞–∫", "–º—É–¥–∞–∫", "–∫–æ–∑–µ–ª", "–∫–æ–∑—ë–ª", "—á–µ—Ä—Ç", "—á—ë—Ä—Ç", "–≥–µ–π", "—Ö—É–π", "–ª–æ—Ö", "–ø–∏–¥–æ—Ä"]
	chk_pat = '(?:{})'.format('|'.join(banned))
	try:
		if message.text:
			get_logs(message)					
		if message.text == "–£–∑–Ω–∞—Ç—å –ì–æ—à—É –ª—É—á—à–µ":
			get_random_var_1(message)
		if message.text == "–ó–∞–≥–∞–¥–∫–∏ –æ—Ç –ì–æ—à–∏":
			get_random_var_2(message)
		if message.text == "–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É —É –ì–æ—à–∏":
			weather(message)
		if message.text == "–ó–∞–±–∞—à–ª—è—Ç—å –ì–æ—à–µ":
			payments(message)
		if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è":
			start(message)
		# admin panel
		if message.text == "admin_panel":
			admin_panel(message)
		if message.text == "read_logs":
			read_logs(message)
		if message.text == "clear_logs":
			clear_logs(message)
		if message.text == "back_to_user":
			start(message)
		# check answer
		# 1.1
		if message.text == "–ö—Ä–∞—Å–Ω—ã–π":
			bot.send_message(message.chat.id, "–ü—É—à–∫–∞, –≥–æ–Ω–∫–∞, –∞–≤—Ç–æ–≥–æ–Ω–∫–∞ üòçüòçüòç! –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
			variant_1_2(message)
		if message.text == "–ó–µ–ª–µ–Ω—ã–π":
			bot.send_message(message.chat.id, "–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∞—Å—è")
			variant_1_2(message)
		if message.text == "–ß–µ—Ä–Ω—ã–π":
			bot.send_message(message.chat.id, "–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∞—Å—è")
			variant_1_2(message)
		# 1.2
		if message.text == "–ê–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π —Å–æ–∫":
			bot.send_message(message.chat.id, "–ü—É—à–∫–∞, –≥–æ–Ω–∫–∞, –∞–≤—Ç–æ–≥–æ–Ω–∫–∞ üòçüòçüòç! –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
			variant_1_3(message)
		if message.text == "Coca-Cola":
			bot.send_message(message.chat.id, "–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∞—Å—è")
			variant_1_3(message)
		if message.text == "–ß–µ—Ä–Ω—ã–π —á–∞–π":
			bot.send_message(message.chat.id, "–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∞—Å—è")
			variant_1_3(message)
		# 1.3
		if message.text == "–ö—É—à–∞—Ç—å":
			bot.send_message(message.chat.id, "–ü—É—à–∫–∞, –≥–æ–Ω–∫–∞, –∞–≤—Ç–æ–≥–æ–Ω–∫–∞ üòçüòçüòç! –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
			variant_1_4(message)
		if message.text == "–ù–∞—è—Ä–∏–≤–∞—Ç—å":
			bot.send_message(message.chat.id, "–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∞—Å—è")
			variant_1_4(message)
		if message.text == "–ì—É–ª—è—Ç—å":
			bot.send_message(message.chat.id, "–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∞—Å—è")
			variant_1_4(message)
		# 1.4
		if message.text == "–ú—É–∑—ã–∫–∞":
			bot.send_message(message.chat.id, "–ü—É—à–∫–∞, –≥–æ–Ω–∫–∞, –∞–≤—Ç–æ–≥–æ–Ω–∫–∞ üòçüòçüòç! –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
			variant_1_5(message)
		if message.text == "–ù–∞—É–∫–∞ –∏ —Ç–µ—Ö–Ω–∏–∫–∞":
			bot.send_message(message.chat.id, "–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∞—Å—è")
			variant_1_5(message)
		if message.text == "–í–∏–¥–µ–æ–∏–≥—Ä—ã":
			bot.send_message(message.chat.id, "–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∞—Å—è")
			variant_1_5(message)
		# 1.5
		if message.text == "–õ–µ—Å–±–∏":
			bot.send_message(message.chat.id, "–ü—É—à–∫–∞, –≥–æ–Ω–∫–∞, –∞–≤—Ç–æ–≥–æ–Ω–∫–∞ üòçüòçüòç! –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
			variant_1_6(message)
		if message.text == "–ì–µ–π":
			bot.send_message(message.chat.id, "–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∞—Å—è")
			variant_1_6(message)
		if message.text == "–ö–ª–∞—Å—Å–∏–∫–∞":
			bot.send_message(message.chat.id, "–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∞—Å—è")
			variant_1_6(message)
		# 1.6
		if message.text == "M2":
			bot.send_message(message.chat.id, "–ü—É—à–∫–∞, –≥–æ–Ω–∫–∞, –∞–≤—Ç–æ–≥–æ–Ω–∫–∞ üòçüòçüòç! –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
			variant_1_1(message)
		if message.text == "M3":
			bot.send_message(message.chat.id, "–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∞—Å—è")
			variant_1_1(message)
		if message.text == "M5":
			bot.send_message(message.chat.id, "–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∞—Å—è")
			variant_1_1(message)
		# 2.1
		if message.text == "–°–ª–∞–≤—è–Ω":
			bot.send_message(message.chat.id, "–ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
			variant_2_2(message)
		if message.text == "–ß–º–æ":
			bot.send_message(message.chat.id, "–¢–æ—Ä–º–æ–∑!")
			variant_2_2(message)
		if message.text == "–¶—ã–ø–ª–µ–Ω–æ–∫":
			bot.send_message(message.chat.id, "–¢–æ—Ä–º–æ–∑!")
			variant_2_2(message)
		if message.text == "–ü–µ—Ä—Å–∏–∫":
			bot.send_message(message.chat.id, "–¢–æ—Ä–º–æ–∑!")
			variant_2_2(message)
		# 2.2
		if message.text == "–†–µ—Å—Ç–æ—Ä–∞–Ω":
			bot.send_message(message.chat.id, "–ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
			variant_2_3(message)
		if message.text == "–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è":
			bot.send_message(message.chat.id, "–¢–æ—Ä–º–æ–∑!")
			variant_2_3(message)
		if message.text == "–ì–æ—à–∏–Ω—ã –ø—Ä–∏–∫–æ–ª—ã":
			bot.send_message(message.chat.id, "–¢–æ—Ä–º–æ–∑!")
			variant_2_3(message)
		if message.text == "–¢–∏–ø, –∫–æ—Ç–æ—Ä—ã–π —Å–¥–µ–ª–∞–ª —Ç–µ–±–µ –±–æ–ª—å–Ω–æ":
			bot.send_message(message.chat.id, "–¢–æ—Ä–º–æ–∑!")
			variant_2_3(message)
		# 2.3
		if message.text == "–ê—Ä–º–µ–Ω–∏—è":
			bot.send_message(message.chat.id, "–ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
			variant_2_1(message)
		if message.text == "–†–æ—Å—Å–∏—è":
			bot.send_message(message.chat.id, "–¢–æ—Ä–º–æ–∑!")
			variant_2_1(message)
		if message.text == "–ö–∏—Ç–∞–π":
			bot.send_message(message.chat.id, "–¢–æ—Ä–º–æ–∑!")
			variant_2_1(message)
		if message.text == "–ê–º–µ—Ä–∏–∫–∞":
			bot.send_message(message.chat.id, "–¢–æ—Ä–º–æ–∑!")
			variant_2_1(message)
		# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ–≤ –Ω–∞ –∑–∞–ø—Ä–µ—Ç
		if re.search(chk_pat, message.text, flags=re.I):
			fun(message)
	except: 
		pass

def get_random_var_2(message):
	rand = random.randint(0, 2)
	if rand == 0:
		variant_2_1(message)
	if rand == 1:
		variant_2_2(message)
	if rand == 2:
		variant_2_3(message)

def variant_2_1(message):
	answer_1 = "–ß–º–æ"
	answer_2 = "–¶—ã–ø–ª–µ–Ω–æ–∫"
	answer_3 = "–°–ª–∞–≤—è–Ω"
	answer_4 = "–ü–µ—Ä—Å–∏–∫"
	markups = types.ReplyKeyboardMarkup(row_width=2)
	btn_1 = types.KeyboardButton(f'{answer_1}')
	btn_2 = types.KeyboardButton(f'{answer_2}')
	btn_3 = types.KeyboardButton(f'{answer_3}')
	btn_4 = types.KeyboardButton(f'{answer_4}')
	btn_5 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
	markups.add(btn_1, btn_2, btn_3, btn_4, btn_5)
	bot.send_message(message.chat.id, f"–ö–∞–∫ –Ω–∞–∑—ã–≤–∞—é—Ç –º–æ–ª–æ–¥–æ–≥–æ –ø–µ—Ç—É—Ö–∞?\n\n1. {answer_1}\n2. {answer_2}\n3. {answer_3}\n4. {answer_4}", reply_markup=markups)

def variant_2_2(message):
	answer_1 = "–†–µ—Å—Ç–æ—Ä–∞–Ω"
	answer_2 = "–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è"
	answer_3 = "–ì–æ—à–∏–Ω—ã –ø—Ä–∏–∫–æ–ª—ã"
	answer_4 = "–¢–∏–ø, –∫–æ—Ç–æ—Ä—ã–π —Å–¥–µ–ª–∞–ª —Ç–µ–±–µ –±–æ–ª—å–Ω–æ"
	markups = types.ReplyKeyboardMarkup(row_width=2)
	btn_1 = types.KeyboardButton(f'{answer_1}')
	btn_2 = types.KeyboardButton(f'{answer_2}')
	btn_3 = types.KeyboardButton(f'{answer_3}')
	btn_4 = types.KeyboardButton(f'{answer_4}')
	btn_5 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
	markups.add(btn_1, btn_2, btn_3, btn_4, btn_5)
	bot.send_message(message.chat.id, f"–ß—Ç–æ —Ç–∞–∫–æ–µ –∫–∞—Ä–∞–±–∞—Å?\n\n1. {answer_1}\n2. {answer_2}\n3. {answer_3}\n4. {answer_4}", reply_markup=markups)

def variant_2_3(message):
	answer_1 = "–†–æ—Å—Å–∏—è"
	answer_2 = "–ê–º–µ—Ä–∏–∫–∞"
	answer_3 = "–ö–∏—Ç–∞–π"
	answer_4 = "–ê—Ä–º–µ–Ω–∏—è"
	markups = types.ReplyKeyboardMarkup(row_width=2)
	btn_1 = types.KeyboardButton(f'{answer_1}')
	btn_2 = types.KeyboardButton(f'{answer_2}')
	btn_3 = types.KeyboardButton(f'{answer_3}')
	btn_4 = types.KeyboardButton(f'{answer_4}')
	btn_5 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
	markups.add(btn_1, btn_2, btn_3, btn_4, btn_5)
	bot.send_message(message.chat.id, f"–°–∫–æ—Ä–æ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –æ–¥–Ω–∞ —Å—Ç—Ä–∞–Ω–∞. –ß—Ç–æ —ç—Ç–æ –∑–∞ —Å—Ç—Ä–∞–Ω–∞?\n\n1. {answer_1}\n2. {answer_2}\n3. {answer_3}\n4. {answer_4}", reply_markup=markups)

def get_random_var_1(message):
	rand = random.randint(0, 5)
	if rand == 0:
		variant_1_1(message)
	if rand == 1:
		variant_1_2(message)
	if rand == 2:
		variant_1_3(message)
	if rand == 3:
		variant_1_4(message)
	if rand == 4:
		variant_1_5(message)
	if rand == 5:
		variant_1_6(message)

def variant_1_1(message):
	answer_1 = "–ö—Ä–∞—Å–Ω—ã–π"
	answer_2 = "–ó–µ–ª–µ–Ω—ã–π"
	answer_3 = "–ß–µ—Ä–Ω—ã–π"
	markups = types.ReplyKeyboardMarkup(row_width=1)
	btn_1 = types.KeyboardButton(f'{answer_1}')
	btn_2 = types.KeyboardButton(f'{answer_2}')
	btn_3 = types.KeyboardButton(f'{answer_3}')
	btn_4 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
	markups.add(btn_1, btn_2, btn_3, btn_4)
	bot.send_message(message.chat.id, f"–í–æ–ø—Ä–æ—Å ‚Ññ1\n{var_1[0]}\n\n1. {answer_1}\n2. {answer_2}\n3. {answer_3}", reply_markup=markups)

def variant_1_2(message):
	answer_1 = "Coca-Cola"
	answer_2 = "–ß–µ—Ä–Ω—ã–π —á–∞–π"
	answer_3 = "–ê–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π —Å–æ–∫"
	markups = types.ReplyKeyboardMarkup(row_width=1)
	btn_1 = types.KeyboardButton(f'{answer_1}')
	btn_2 = types.KeyboardButton(f'{answer_2}')
	btn_3 = types.KeyboardButton(f'{answer_3}')
	btn_4 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
	markups.add(btn_1, btn_2, btn_3, btn_4)
	bot.send_message(message.chat.id, f"–í–æ–ø—Ä–æ—Å ‚Ññ2\n{var_1[1]}\n\n1. {answer_1}\n2. {answer_2}\n3. {answer_3}", reply_markup=markups)

def variant_1_3(message):
	answer_1 = "–ù–∞—è—Ä–∏–≤–∞—Ç—å"
	answer_2 = "–ö—É—à–∞—Ç—å"
	answer_3 = "–ì—É–ª—è—Ç—å"
	markups = types.ReplyKeyboardMarkup(row_width=1)
	btn_1 = types.KeyboardButton(f'{answer_1}')
	btn_2 = types.KeyboardButton(f'{answer_2}')
	btn_3 = types.KeyboardButton(f'{answer_3}')
	btn_4 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
	markups.add(btn_1, btn_2, btn_3, btn_4)
	bot.send_message(message.chat.id, f"–í–æ–ø—Ä–æ—Å ‚Ññ3\n{var_1[2]}\n\n1. {answer_1}\n2. {answer_2}\n3. {answer_3}", reply_markup=markups)

def variant_1_4(message):
	answer_1 = "–ù–∞—É–∫–∞ –∏ —Ç–µ—Ö–Ω–∏–∫–∞"
	answer_2 = "–í–∏–¥–µ–æ–∏–≥—Ä—ã"
	answer_3 = "–ú—É–∑—ã–∫–∞"
	markups = types.ReplyKeyboardMarkup(row_width=1)
	btn_1 = types.KeyboardButton(f'{answer_1}')
	btn_2 = types.KeyboardButton(f'{answer_2}')
	btn_3 = types.KeyboardButton(f'{answer_3}')
	btn_4 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
	markups.add(btn_1, btn_2, btn_3, btn_4)
	bot.send_message(message.chat.id, f"–í–æ–ø—Ä–æ—Å ‚Ññ4\n{var_1[3]}\n\n1. {answer_1}\n2. {answer_2}\n3. {answer_3}", reply_markup=markups)
		
def variant_1_5(message):
	answer_1 = "–õ–µ—Å–±–∏"
	answer_2 = "–ì–µ–π"
	answer_3 = "–ö–ª–∞—Å—Å–∏–∫–∞"
	markups = types.ReplyKeyboardMarkup(row_width=1)
	btn_1 = types.KeyboardButton(f'{answer_1}')
	btn_2 = types.KeyboardButton(f'{answer_2}')
	btn_3 = types.KeyboardButton(f'{answer_3}')
	btn_4 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
	markups.add(btn_1, btn_2, btn_3, btn_4)
	bot.send_message(message.chat.id, f"–í–æ–ø—Ä–æ—Å ‚Ññ5\n{var_1[4]}\n\n1. {answer_1}\n2. {answer_2}\n3. {answer_3}", reply_markup=markups)

def variant_1_6(message):
	answer_1 = "M3"
	answer_2 = "M5"
	answer_3 = "M2"
	markups = types.ReplyKeyboardMarkup(row_width=1)
	btn_1 = types.KeyboardButton(f'{answer_1}')
	btn_2 = types.KeyboardButton(f'{answer_2}')
	btn_3 = types.KeyboardButton(f'{answer_3}')
	btn_4 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
	markups.add(btn_1, btn_2, btn_3, btn_4)
	bot.send_message(message.chat.id, f"–í–æ–ø—Ä–æ—Å ‚Ññ6\n{var_1[5]}\n\n1. {answer_1}\n2. {answer_2}\n3. {answer_3}", reply_markup=markups)

def fun(message):
	bot.send_message(message.chat.id, "–≠—Ç–æ –±—ã–ª–æ –∑—Ä—è...\n\n<b>–ù–µ —Ç—Ä–æ–≥–∞–π –º–æ–±–∏–ª—É!!!</b>", parse_mode='html')
	time.sleep(2)
	bot.send_message(message.chat.id, "–ë–µ–¥–∞ —Å–ª—É—á–∏–ª–∞—Å—å! –ó–≤–æ–Ω–∏ –ì–æ—à–µ!\n\n–£ —Ç–µ–±—è –µ—Å—Ç—å —Ä–æ–≤–Ω–æ 10 —Å–µ–∫—É–Ω–¥!\n–≠—Ç–æ –Ω–µ —à—É—Ç–∫–∞! –ü–æ—Ç–æ—Ä–æ–ø–∏—Å—å!!!")
	time.sleep(2)
	bot.send_message(message.chat.id, "1")
	time.sleep(1)
	bot.send_message(message.chat.id, "2")
	time.sleep(1)
	bot.send_message(message.chat.id, "3")
	time.sleep(1)
	bot.send_message(message.chat.id, "4")
	time.sleep(1)
	bot.send_message(message.chat.id, "5")
	time.sleep(1)
	bot.send_message(message.chat.id, "6")
	time.sleep(1)
	bot.send_message(message.chat.id, "7")
	time.sleep(1)
	bot.send_message(message.chat.id, "8")
	time.sleep(1)
	bot.send_message(message.chat.id, "9")
	time.sleep(1)
	bot.send_message(message.chat.id, "10")
	time.sleep(1)
	bot.send_message(message.chat.id, "–ú–Ω–µ –æ—á–µ–Ω—å –∂–∞–ª—å..")
	time.sleep(2)
	timer = 0
	while True:
		bot.send_message(message.chat.id, "<b>–£—É—É—É, —Å—É–µ—Ç–∞–∞...</b>", parse_mode='html')
		timer+=1
		if timer == 50:
			break
		

bot.polling(none_stop=True)
